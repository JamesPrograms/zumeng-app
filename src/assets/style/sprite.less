/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-home-on-name: 'icon_home_on';
@icon-home-on-x: 0px;
@icon-home-on-y: 0px;
@icon-home-on-offset-x: 0px;
@icon-home-on-offset-y: 0px;
@icon-home-on-width: 22px;
@icon-home-on-height: 22px;
@icon-home-on-total-width: 74px;
@icon-home-on-total-height: 74px;
@icon-home-on-image: '~@/assets/image/sprite.png';
@icon-home-on: 0px 0px 0px 0px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_home_on';
@icon-home-name: 'icon_home';
@icon-home-x: 26px;
@icon-home-y: 0px;
@icon-home-offset-x: -26px;
@icon-home-offset-y: 0px;
@icon-home-width: 22px;
@icon-home-height: 22px;
@icon-home-total-width: 74px;
@icon-home-total-height: 74px;
@icon-home-image: '~@/assets/image/sprite.png';
@icon-home: 26px 0px -26px 0px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_home';
@icon-like-on-name: 'icon_like_on';
@icon-like-on-x: 0px;
@icon-like-on-y: 26px;
@icon-like-on-offset-x: 0px;
@icon-like-on-offset-y: -26px;
@icon-like-on-width: 22px;
@icon-like-on-height: 22px;
@icon-like-on-total-width: 74px;
@icon-like-on-total-height: 74px;
@icon-like-on-image: '~@/assets/image/sprite.png';
@icon-like-on: 0px 26px 0px -26px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_like_on';
@icon-like-name: 'icon_like';
@icon-like-x: 26px;
@icon-like-y: 26px;
@icon-like-offset-x: -26px;
@icon-like-offset-y: -26px;
@icon-like-width: 22px;
@icon-like-height: 22px;
@icon-like-total-width: 74px;
@icon-like-total-height: 74px;
@icon-like-image: '~@/assets/image/sprite.png';
@icon-like: 26px 26px -26px -26px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_like';
@icon-mine-on-name: 'icon_mine_on';
@icon-mine-on-x: 52px;
@icon-mine-on-y: 0px;
@icon-mine-on-offset-x: -52px;
@icon-mine-on-offset-y: 0px;
@icon-mine-on-width: 22px;
@icon-mine-on-height: 22px;
@icon-mine-on-total-width: 74px;
@icon-mine-on-total-height: 74px;
@icon-mine-on-image: '~@/assets/image/sprite.png';
@icon-mine-on: 52px 0px -52px 0px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_mine_on';
@icon-mine-name: 'icon_mine';
@icon-mine-x: 52px;
@icon-mine-y: 26px;
@icon-mine-offset-x: -52px;
@icon-mine-offset-y: -26px;
@icon-mine-width: 22px;
@icon-mine-height: 22px;
@icon-mine-total-width: 74px;
@icon-mine-total-height: 74px;
@icon-mine-image: '~@/assets/image/sprite.png';
@icon-mine: 52px 26px -52px -26px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_mine';
@icon-myhouse-on-name: 'icon_myhouse_on';
@icon-myhouse-on-x: 0px;
@icon-myhouse-on-y: 52px;
@icon-myhouse-on-offset-x: 0px;
@icon-myhouse-on-offset-y: -52px;
@icon-myhouse-on-width: 22px;
@icon-myhouse-on-height: 22px;
@icon-myhouse-on-total-width: 74px;
@icon-myhouse-on-total-height: 74px;
@icon-myhouse-on-image: '~@/assets/image/sprite.png';
@icon-myhouse-on: 0px 52px 0px -52px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_myhouse_on';
@icon-myhouse-name: 'icon_myhouse';
@icon-myhouse-x: 26px;
@icon-myhouse-y: 52px;
@icon-myhouse-offset-x: -26px;
@icon-myhouse-offset-y: -52px;
@icon-myhouse-width: 22px;
@icon-myhouse-height: 22px;
@icon-myhouse-total-width: 74px;
@icon-myhouse-total-height: 74px;
@icon-myhouse-image: '~@/assets/image/sprite.png';
@icon-myhouse: 26px 52px -26px -52px 22px 22px 74px 74px '~@/assets/image/sprite.png' 'icon_myhouse';
@spritesheet-width: 74px;
@spritesheet-height: 74px;
@spritesheet-image: '~@/assets/image/sprite.png';
@spritesheet-sprites: @icon-home-on @icon-home @icon-like-on @icon-like @icon-mine-on @icon-mine @icon-myhouse-on @icon-myhouse;
@spritesheet: 74px 74px '~@/assets/image/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
